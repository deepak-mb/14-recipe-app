{"version":3,"sources":["reducers/recipeReducer.js","reducers/index.js","actions/types.js","store.js","components/layout/Navbar.js","components/recipies/Recipe.js","components/recipies/Recipies.js","actions/recipeActions.js","App.js","serviceWorker.js","index.js"],"names":["initialState","recipe","count","from","to","currentPage","combineReducers","recipies","state","arguments","length","undefined","action","type","Object","objectSpread","payload","hits","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","react_default","a","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Recipe","_this$props$recipe$re","this","props","label","image","url","dietLabels","healthLabels","ingredientLines","style","backgroundImage","concat","map","ingredient","index","key","diet","benefit","target","rel","Recipies","search","recipes","onChange","e","_this","setState","value","onSubmit","preventDefault","getRecipe","getNextTen","console","log","handlePageChange","nextProps","_this$props","placeholder","recipies_Recipe","connect","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","axios","get","then","res","data","stop","_x","App","react_redux_es","layout_Navbar","recipies_Recipies","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2bc5ff85.chunk.js","sourcesContent":["import { GET_RECIPIE } from \"../actions/types\";\n\nconst initialState = {\n  recipe: \"\",\n  count: \"\",\n  from: \"\",\n  to: \"\",\n  currentPage: \"\"\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_RECIPIE:\n      // console.log(action.payload.to);\n      // console.log(((action.payload.from + action.payload.to )- 1) / 10);\n      return {\n        ...state,\n        recipe: action.payload.hits,\n        count: action.payload.count,\n        from: action.payload.from,\n        to: action.payload.to\n        // currentPage: ((action.payload.from + action.payload.to )- 1) / 10\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport recipeReducer from \"./recipeReducer\";\n\nexport default combineReducers({\n  recipies: recipeReducer\n});\n","export const GET_RECIPIE = \"GET_RECIPIE\";\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n        <h3 className=\"navbar-brand text-danger\" href=\"!#\">\n          Recipe Finder\n        </h3>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            {/* <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"#\">\n                Home <span className=\"sr-only\">(current)</span>\n              </a>\n            </li> */}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n\nclass Recipe extends Component {\n  render() {\n    const {\n      label,\n      image,\n      url,\n      dietLabels,\n      healthLabels,\n      ingredientLines\n    } = this.props.recipe.recipe;\n    // console.log(recipe);\n    let p;\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"row no-gutters\">\n          <div\n            className=\"col-md-4 bg-image\"\n            style={{ backgroundImage: `url(${image})` }}\n          >\n            {/* <img src={image} className=\"card-img\" alt=\"Food\" /> */}\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{label}</h5>\n              <ul>\n                {ingredientLines.map((ingredient, index) => (\n                  <li key={index} className=\"card-text\">\n                    {ingredient}\n                  </li>\n                ))}\n              </ul>\n              <p>\n                Diet:{\" \"}\n                {dietLabels.length !== 0 ? (\n                  dietLabels.map((diet, index) => (\n                    <span className=\"card-text\" key={index}>\n                      {diet},{\" \"}\n                    </span>\n                  ))\n                ) : (\n                  <span className=\"card-text\">N/A</span>\n                )}\n              </p>\n              <p className=\"card-text\">\n                Health benifits:{\" \"}\n                {healthLabels !== 0 ? (\n                  healthLabels.map((benefit, index) => (\n                    <span key={index}>{benefit}, </span>\n                  ))\n                ) : (\n                  <span className=\"card-text\">N/A</span>\n                )}\n              </p>\n            </div>\n            <div className=\"card-footer bg-transparent\">\n              <a\n                href={url}\n                className=\"btn btn-dark\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                See full recipe\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Recipe;\n","import React, { Component } from \"react\";\nimport { getRecipe } from \"../../actions/recipeActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n// import Search from \"../layout/Search\";\nimport Recipe from \"./Recipe\";\n// import Pagination from \"react-js-pagination\";\n\nclass Recipies extends Component {\n  state = {\n    search: \"potato\",\n    from: \"\",\n    to: \"\",\n    recipes: \"\"\n  };\n  onChange = e => {\n    this.setState({ search: e.target.value });\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    let search = this.state.search;\n    this.props.getRecipe(search);\n  };\n  componentWillReceiveProps(nextProps) {\n    // console.log(nextProps);\n    this.setState({\n      from: this.props.from,\n      to: this.props.to\n    });\n  }\n  getNextTen = from => {\n    console.log(from);\n  };\n  handlePageChange = e => {};\n  render() {\n    const { recipes, from, to } = this.props;\n    // console.log(this.props.from, this.props.to);\n    return (\n      <div className=\"container\">\n        <form className=\"form-inline my-2 my-lg-0\" onSubmit={this.onSubmit}>\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n            onChange={this.onChange}\n          />\n          <button\n            className=\"btn btn-outline-success my-2 my-sm-0\"\n            type=\"submit\"\n          >\n            Search\n          </button>\n        </form>\n        {recipes ? (\n          <div>\n            <h3>Recipes:</h3>\n            {/* <input\n              type=\"button\"\n              value=\"Prev\"\n              className=\"btn btn-success\"\n              onClick={this.getPrevTen.bind(this, from)}\n            />\n            <input\n              type=\"button\"\n              value=\"Next\"\n              className=\"btn btn-success\"\n              onClick={this.getNextTen.bind(this, to)}\n            /> */}\n            {/* <Pagination\n              activePage={this.state.activePage}\n              itemsCountPerPage={10}\n              totalItemsCount={450}\n              pageRangeDisplayed={5}\n              onChange={this.handlePageChange}\n            /> */}\n            {recipes.map((recipe, index) => (\n              <Recipe key={index} recipe={recipe} />\n            ))}\n          </div>\n        ) : (\n          <p>Search for any recipe...</p>\n        )}\n      </div>\n    );\n  }\n}\n\nRecipies.propTypes = {\n  getRecipe: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  recipes: state.recipies.recipe,\n  from: state.recipies.from,\n  to: state.recipies.to\n});\n\nexport default connect(\n  mapStateToProps,\n  { getRecipe }\n)(Recipies);\n","import { GET_RECIPIE } from \"./types\";\nimport axios from \"axios\";\n\nexport const getRecipe = (search, from, to) => async dispatch => {\n  await axios\n    .get(\n      `https://api.edamam.com/search?q=${search}&app_id=74f997d4&app_key=b8384559e563634f50181ae4a417cd40&from=11&to=20`\n    )\n    .then(res => {\n      // console.log(res.data);\n      dispatch({\n        type: GET_RECIPIE,\n        payload: res.data\n      });\n    });\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\n//Components\nimport Navbar from \"./components/layout/Navbar\";\nimport Recipies from \"./components/recipies/Recipies\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"container\">\n          <Navbar />\n          <Recipies />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}